{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","uiMode","href","title","type","id","onClick","toggleUIMode","htmlFor","TextForm","useState","text","setText","style","color","fontFamily","heading","value","onChange","event","target","rows","backgroundColor","border","borderRadius","padding","disabled","length","newText","toUpperCase","showAlert","toLowerCase","newtext","split","join","document","getElementById","select","navigator","clipboard","writeText","filter","element","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalise","msg","App","setuiMode","setAlert","body","message","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.aa8713f4.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n\treturn (\r\n\t\t<nav className={`navbar navbar-expand-lg navbar-${props.uiMode} bg-${props.uiMode}`}>\r\n\t\t\t<div className=\"container-fluid\">\r\n\r\n\t\t\t\t{/* Title Navigation Item  */}\r\n\t\t\t\t<a className=\"navbar-brand\" href=\"#\"><b>{props.title}</b></a>\r\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\t\t\t\t\t<ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t{/* Home Navigation Item  */}\r\n\t\t\t\t\t\t\t{/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\"><b>Home</b></Link> */}\r\n\t\t\t\t\t\t\t<a className=\"nav-link active\" aria-current=\"page\" href=\"#\"><b>Home</b></a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t{/* About Navigation Item */}\r\n\t\t\t\t\t\t\t{/* <Link className=\"nav-link\" to=\"/about\"><b>{props.aboutText}</b></Link> */}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<div className={`form-check form-switch text-${props.uiMode === 'light' ? 'dark' : 'light'}`}>\r\n\t\t\t\t\t\t<input className=\"form-check-input\" onClick={props.toggleUIMode}  type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\n\r\nNavbar.propTypes = {\r\n\ttitle: PropTypes.string.isRequired,\r\n\taboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n\ttitle: 'set the title here',\r\n\taboutText: 'set about here'\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UPPERCASE.\",\"success\")\r\n    }\r\n\r\n    const handleLoClick = () => {    \r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase.\",\"success\")\r\n    }\r\n\r\n    const handleSpacesClick = () => {\r\n        let newtext = text.split(/[ ]+/);\r\n        setText(newtext.join(\" \"));\r\n        props.showAlert(\"Spaces are removed.\",\"success\")\r\n    };\r\n\r\n    const handleClearClick = () => {\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared.\",\"success\")\r\n    }\r\n\r\n    const handleCopyClick = () => {\r\n        let text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        // document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Copied to the Clipboard.\",\"success\")\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        \r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('enter text here...');\r\n\r\n\r\n\r\n    //text = 'new text'; //wrong way to change the state\r\n    //setText(\"new text\"); //correc way to change the state\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ color: props.uiMode === 'dark' ? 'white' : 'black' }}>\r\n                <h1 style={{fontFamily: 'nunito'}}>{props.heading}</h1>\r\n\r\n                <div className=\"mb-3 mx-2\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"5\" \r\n                    style={{\r\n                        backgroundColor: props.uiMode === 'dark' ? '#30475E' : '#e7e7e7',\r\n                        color: props.uiMode === 'dark' ? 'white' : 'black',\r\n                        border: 'none',\r\n                        borderRadius: '20px',\r\n                        padding: '5px 20px',\r\n                    }}>\r\n                    </textarea>\r\n                </div>\r\n\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}  > Convert to UpperCase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}  > Convert to LowerCase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleSpacesClick}  > Trim Spaces</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopyClick}  > Copy Text</button>\r\n                <button disabled={text.length===0} className=\"btn btn-secondary mx-1 my-1\" onClick={handleClearClick}  > Clear</button>\r\n\r\n            </div>\r\n            <div className=\"container my-1\" style={{ color: props.uiMode === 'dark' ? 'white' : 'black' }}>\r\n                <h2 style={{fontFamily: 'nunito'}}>your text summary</h2>\r\n                <div className=\"container mx-2\" style={{backgroundColor: props.uiMode === 'dark' ? '#30475E' : '#e7e7e7',border: 'none', borderRadius: '20px', padding: '5px 11px',}}>\r\n\r\n                <p className=\"mx-2\">{text.split(/\\s+/).filter((element) =>{return element.length!==0}).length} words and {text.length} characters</p>\r\n\r\n                <p className=\"mx-2\">{0.008 * text.split(/\\s+/).filter((element) =>{return element.length!==0}).length} minutes to read</p>\r\n                </div>\r\n\r\n                <h2 style={{fontFamily: 'nunito'}}> preview</h2>\r\n\r\n                <p className=\"mx-2\" style={{backgroundColor: props.uiMode === 'dark' ? '#30475E' : '#e7e7e7',border: 'none', borderRadius: '20px', padding: '5px 20px',}}> {text.length > 0 ? text : \"Nothing to preview!\"}</p>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalise = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalise(props.alert.type)}</strong> : {props.alert.msg}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n// \tBrowserRouter as Router,\n// \tSwitch,\n// \tRoute,\n// \tLink\n// } from \"react-router-dom\";\n\n\nfunction App() {\n\n\tconst [uiMode, setuiMode] = useState('light'); // whether dark mode is enable or not\n\tconst [alert, setAlert] = useState(null); //to set the alert\n\n\tconst showAlert = (message, type) => {\n\t\tsetAlert({\n\t\t\tmsg: message,\n\t\t\ttype: type\n\t\t})\n\t\tsetTimeout(() => {\n\t\t\tsetAlert(null);\n\n\t\t}, 2000);\n\t}\n\n\tconst toggleUIMode = () => {\n\t\tif (uiMode === 'light') {\n\t\t\tsetuiMode('dark');\n\t\t\tdocument.body.style.backgroundColor = '#222831';\n\t\t\t// showAlert(\"Dark mode had been enabled\", \"success\");\n\t\t}\n\t\telse {\n\t\t\tsetuiMode('light');\n\t\t\tdocument.body.style.backgroundColor = 'white';\n\t\t\t// showAlert(\"Light mode had been enabled\", \"success\");\n\t\t}\n\t}\n\treturn (\n\t\t<>\n\t\t\t{/* <Router> */}\n\n\t\t\t\t<Navbar title=\"Textext\" aboutText=\"About\" uiMode={uiMode} toggleUIMode={toggleUIMode} />\n\t\t\t\t<div className=\"container my-3\">\n\t\t\t\t\t{/* <Switch> */}\n\t\t\t\t\t\t{/* <Route exact path=\"/\"> */}\n\t\t\t\t\t\t\t<TextForm heading=\"Textext - word counter, character counter, clear spaces\" uiMode={uiMode} showAlert={showAlert} />\n\t\t\t\t\t\t{/* </Route> */}\n\t\t\t\t\t\t{/* <Route exact path=\"/about\"> */}\n\t\t\t\t\t\t\t{/* <About /> */}\n\t\t\t\t\t\t\n\t\t\t\t\t\t{/* </Route> */}\n\t\t\t\t\t{/* </Switch> */}\n\t\t\t\t</div>\n\n\t\t\t{/* </Router> */}\n\t\t\t<Alert alert={alert} />\n\t\t</>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}